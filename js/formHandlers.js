// formHandlers.js - معالجات النماذج
class معالجاتالنماذج {
    // معالجة نموذج تسجيل الدخول
    static async معالجةنموذجتسجيلالدخول(بياناتالنموذج) {
        const بريدإلكتروني = بياناتالنموذج.get('بريدإلكتروني');
        const كلمةالمرور = بياناتالنموذج.get('كلمةالمرور');

        if (!بريدإلكتروني || !كلمةالمرور) {
            Utils.عرضالحالة('يرجى ملء جميع الحقول', 'خطأ', 'حالة-تسجيل-الدخول');
            return;
        }

        try {
            Utils.عرضالحالة('جاري تسجيل الدخول...', 'نجاح', 'حالة-تسجيل-الدخول');
            await Auth.تسجيلالدخول(بريدإلكتروني, كلمةالمرور);
        } catch (error) {
            Utils.عرضالحالة(`فشل تسجيل الدخول: ${error.message}`, 'خطأ', 'حالة-تسجيل-الدخول');
        }
    }

    // معالجة نموذج إنشاء حساب
    static async معالجةنموذجإنشاءحساب(بياناتالنموذج) {
        const بياناتالمستخدم = {
            اسم: بياناتالنموذج.get('اسم'),
            هاتف: بياناتالنموذج.get('هاتف'),
            عنوان: بياناتالنموذج.get('عنوان'),
            بريدإلكتروني: بياناتالنموذج.get('بريدإلكتروني'),
            كلمةالمرور: بياناتالنموذج.get('كلمةالمرور'),
            تأكيدكلمةالمرور: بياناتالنموذج.get('تأكيدكلمةالمرور'),
            رمزإحالة: بياناتالنموذج.get('رمزإحالة')
        };

        console.log('بيانات التسجيل المستلمة:', بياناتالمستخدم);

        // التحقق من البيانات
        if (!بياناتالمستخدم.اسم || !بياناتالمستخدم.هاتف || !بياناتالمستخدم.عنوان || 
            !بياناتالمستخدم.بريدإلكتروني || !بياناتالمستخدم.كلمةالمرور || !بياناتالمستخدم.تأكيدكلمةالمرور) {
            Utils.عرضالحالة('يرجى ملء جميع الحقول الإلزامية', 'خطأ', 'حالة-التسجيل');
            return;
        }

        if (بياناتالمستخدم.كلمةالمرور !== بياناتالمستخدم.تأكيدكلمةالمرور) {
            Utils.عرضالحالة('كلمة المرور غير متطابقة', 'خطأ', 'حالة-التسجيل');
            return;
        }

        if (بياناتالمستخدم.كلمةالمرور.length < 6) {
            Utils.عرضالحالة('كلمة المرور يجب أن تكون 6 أحرف على الأقل', 'خطأ', 'حالة-التسجيل');
            return;
        }

        try {
            Utils.عرضالحالة('جاري إنشاء الحساب...', 'نجاح', 'حالة-التسجيل');
            await Auth.إنشاءحساب(بياناتالمستخدم);
        } catch (error) {
            console.error('خطأ في معالجةنموذجإنشاءحساب:', error);
        }
    }

    // معالجة نموذج النشر
    static async معالجةنموذجالنشر(بياناتالنموذج) {
        if (!مستخدمحالي) {
            Utils.عرضالحالة('يجب تسجيل الدخول لنشر منشور', 'خطأ');
            Navigation.عرضالصفحة('تسجيل-الدخول');
            return;
        }

        const بياناتالمنشور = {
            اسم: بياناتالنموذج.get('اسم'),
            وصف: بياناتالنموذج.get('وصف'),
            موقع: بياناتالنموذج.get('موقع'),
            نوع: بياناتالنموذج.get('نوع'),
            سعر: بياناتالنموذج.get('سعر'),
            ملفالصورة: بياناتالنموذج.get('صورة')
        };

        if (!بياناتالمنشور.اسم || !بياناتالمنشور.وصف || !بياناتالمنشور.موقع || 
            !بياناتالمنشور.نوع || !بياناتالمنشور.سعر) {
            Utils.عرضالحالة('يرجى ملء جميع الحقول المطلوبة', 'خطأ');
            return;
        }

        try {
            Utils.عرضالحالة('جاري نشر المنشور...', 'نجاح');
            await المنشورات.نشرمنشور(بياناتالمنشور);
            Utils.عرضالحالة('تم نشر المنشور بنجاح!', 'نجاح');
            
            setTimeout(() => {
                Navigation.عرضالصفحة('الرئيسية');
            }, 1500);
        } catch (error) {
            Utils.عرضالحالة(`فشل في النشر: ${error.message}`, 'خطأ');
        }
    }
            }
